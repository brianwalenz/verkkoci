#############################################################################
 #
 #  This file is part of Verkko, a software program that assembles
 #  whole-genome sequencing reads into telomere-to-telomere
 #  haplotype-resolved chromosomes.
 #
 #  Except as indicated otherwise, this is a 'United States Government
 #  Work', and is released in the public domain.
 #
 #  File 'README.licenses' in the root directory of this distribution
 #  contains full conditions and disclaimers.
 #
 ##

#
#  Rule combineConsensus combines the outputs of consensus into a single
#  file, and rename the sequences back to their original names.
#
#  See comments in 3-combineONT for details on the functions.
#
#  Configuration Parameters:
#    ...
#


def combineConsensusI(wildcards):
    return expand("7-consensus/packages/part{nnnn}.fasta", nnnn = glob_wildcards("7-consensus/packages/part{xxxx}.cnspack").xxxx)

def combineConsensusP(wildcards):
    return expand("packages/part{nnnn}.fasta", nnnn = glob_wildcards("7-consensus/packages/part{xxxx}.cnspack").xxxx)

rule combineConsensus:
    input:
        consensus = combineConsensusI,
        tigmap    = {rules.buildPackages.output.tigmap},
        finished  = {rules.buildPackages.output.finished},
    output:
        fasta     = {rules.verkko.input.consensus}
    log:
        err       = '7-consensus/combineConsensus.err'
    params:
        paths     = combineConsensusP,
        keepinter = config['keep_intermediate'],
        jobid     = 1
    threads:
        1
    resources:
        n_cpus = 1,
        mem_gb = 4,
        time_h = 4
    shell:
        '''
cd 7-consensus

cat > ./combineConsensus.sh <<EOF
#!/bin/sh
set -e

{PYTHON} {VERKKO}/scripts/process_reads.py rename ../{output.fasta} \\\\
  ../{input.tigmap} \\\\
  {params.paths}

if [ {params.keepinter} = False ] ; then
  rm -rf packages
fi
EOF

chmod +x ./combineConsensus.sh

./combineConsensus.sh > ../{log.err} 2>&1
        '''

rule updateGFA:
    input:
       consensus = rules.combineConsensus.output.fasta,
       graph     = rules.untip.output.graph,
    output:
       graph     = rules.verkko.input.graph, 
    log:
       err       = '7-consensus/updateGFA.err'
    params:
       jobid     = 1
    threads:
       8
    resources:
       n_cpus = 8,
       mem_gb = 32,
       time_h = 24
    shell:
       '''
cd 7-consensus

cat > ./updateGFA.sh <<EOF
#!/bin/sh
set -e

{PYTHON} {VERKKO}/bin/alignGFA \\\\
  -V -e 0.20 -gfa              \\\\
  -i ../{input.graph}          \\\\
  -T ../{input.consensus} 0    \\\\
  -t {threads}                 \\\\
  -o ../{output.graph}

EOF

chmod +x ./updateGFA.sh

./updateGFA.sh > ../{log.err} 2>&1
        '''
